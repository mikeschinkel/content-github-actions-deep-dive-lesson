
name: Callable OVA Builder

on:
  workflow_call:
    inputs:
      vcenter_server:
        type: string
        description: 'vCenter Server to run OVA build on'
        required: true

      vm_size:
        type: string
        description: 'Size of OVA to build'
        required: true

      start_from:
        type: string
        description: 'Step to start build FROM (inclusive)'
        required: true

jobs:
  init:
    runs-on: ubuntu-latest
    outputs:
      concurrency_key: ${{ steps.get_key.outputs.concurrency_key }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Get Key
        id: get_key
        uses: ./.github/actions/concurrency-key
        with:
          vcenter_server: ${{ github.event.inputs.vcenter_server }}

  build:
    runs-on: ubuntu-latest
    needs: init
    env:
      start_from: ${{ github.event.inputs.start_from }}
      ran: "!"
    strategy:
      max-parallel: 1
      matrix:
        steps: [ setup, start, clean, k8s, tools, iso, upload, install, export ]
#        descrs: [
#          "Ensure required tools installed",
#          "Ensure the OVA Builder VM has been started",
#          "Clean the Work Directories of the OVA Builder",
#          "Build the Kubernetes Installer",
#          "Build the HCMS Tools Tarball",
#          "Build the GLCP OnPrem Gateway ISO",
#          "Upload the ISO to vSphere Datastore",
#          "Create a VM on vSphere based on the ISO",
#          "Export the OVA from the ISO-based VM to the OVA Builder",
#        ]
    steps:
      - name: ${{ matrix.step }}
        if: matrix.step==env.start_from || contains(env.ran,env.start_from)
        run: |
          echo "ran=${{matrix.step}} ${{env.ran}}" >> $GITHUB_ENV
          echo "Step: ${{ matrix.step }}"
          echo "Run thus far: ${{ env.ran }}"


#  build:
#    runs-on: ubuntu-latest
#    needs: init
#    concurrency:
#      group: ${{ needs.init.outputs.concurrency_key }}"
#      cancel-in-progress: true
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
#      - name: Set Environment Variables
#        uses: ./.github/actions/set-vars
#        with:
#          vcenter_server: ${{ github.event.inputs.vcenter_server }}
#          vm_size: ${{ github.event.inputs.vm_size }}
#        id: set_vars
#      - name: Show Vars
#        run: |
#          echo "CONCURRENCY_KEY:  ${{ needs.init.outputs.concurrency_key }}"
#          echo "VCENTER_SERVER:   ${{ env.VCENTER_SERVER }}"
#          echo "VCENTER_USERNAME: ${{ env.VCENTER_USERNAME }}"
#          echo "VCENTER_PASSWORD: ${{ env.VCENTER_PASSWORD }}"
#          echo "VM_SIZE:          ${{ env.VM_SIZE }}"
#
#

