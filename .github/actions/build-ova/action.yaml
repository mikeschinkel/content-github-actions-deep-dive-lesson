
name: Build OVA

description: "Builds an VMware OVA on a vSphere 'Builder' VM"

inputs:
  start_from:
    description: 'Step to start build FROM (inclusive)'
    required: true
    default: setup

runs:
  using: composite
  steps:
    - id: init
      name: Init
      shell: bash
      run: |
        echo "ran=!" >> $GITHUB_ENV
        echo "init — ${{ inputs.start_from }} — ${{ steps.id }}"
  
    - id: setup
      if: inputs.start_from == 'setup'
      name: Setup
      shell: bash
      run: |
        echo "ran=setup" >> $GITHUB_ENV
        echo "setup"

    - id: start
      if: inputs.start_from == 'start' || contains(env.ran,inputs.start_from)
      name: start
      shell: bash
      run: |
        echo "ran=start ${{env.ran}}" >> $GITHUB_ENV
        echo "start"
  
    - id: clean
      if: inputs.start_from == 'clean' || contains(env.ran,inputs.start_from)
      name: clean
      shell: bash
      run: |
        echo "ran=clean ${{env.ran}}" >> $GITHUB_ENV
        echo "clean"
  
    - id: k8s
      if: inputs.start_from == 'k8s' || contains(env.ran,inputs.start_from)
      name: k8s
      shell: bash
      run: |
        echo "ran=k8s ${{env.ran}}" >> $GITHUB_ENV
        echo "k8s"
  
    - id: tools
      if: inputs.start_from == 'tools' || contains(env.ran,inputs.start_from)
      name: tools
      shell: bash
      run: |
        echo "ran=tools ${{env.ran}}" >> $GITHUB_ENV
        echo "tools"
  
    - id: iso
      if: inputs.start_from == 'iso' || contains(env.ran,inputs.start_from)
      name: iso
      shell: bash
      run: |
        echo "ran=iso ${{env.ran}}" >> $GITHUB_ENV
        echo "iso"
  
    - id: upload
      if: inputs.start_from == 'upload' || contains(env.ran,inputs.start_from)
      name: upload
      shell: bash
      run: |
        echo "ran=upload ${{env.ran}}" >> $GITHUB_ENV
        echo "upload"
  
    - id: install
      if: inputs.start_from == 'install' || contains(env.ran,inputs.start_from)
      name: install
      shell: bash
      run: |
        echo "ran=install ${{env.ran}}" >> $GITHUB_ENV
        echo "install"
  
    - id: export
      if: inputs.start_from == 'export' || contains(env.ran,inputs.start_from)
      name: export
      shell: bash
      run: |
        echo "ran=export ${{env.ran}}" >> $GITHUB_ENV
        echo "export"
  
