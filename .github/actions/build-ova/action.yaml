
name: Build OVA

description: "Builds an VMware OVA on a vSphere 'Builder' VM"

inputs:
  start_from:
    description: 'Step to start build FROM (inclusive)'
    required: true
    default: setup

runs:
  using: composite
  steps:
    - id: init
      name: Init
      shell: bash
      run: |
        echo "ran=!" >> $GITHUB_ENV
        echo "init â€” ${{ inputs.start_from }}"
  
    - id: setup
      if: github.action == inputs.start_from
      name: Setup
      shell: bash
      run: |
        echo "ran=${{github.action}}" >> $GITHUB_ENV
        echo "setup"

    - id: start
      if: github.action==inputs.start_from || contains(env.ran,inputs.start_from)
      name: start
      shell: bash
      run: |
        echo "ran=${{github.action}} ${{env.ran}}" >> $GITHUB_ENV
        echo "start"
  
    - id: clean
      if: github.action==inputs.start_from || contains(env.ran,inputs.start_from)
      name: clean
      shell: bash
      run: |
        echo "ran=${{github.action}} ${{env.ran}}" >> $GITHUB_ENV
        echo "clean"
  
    - id: k8s
      if: github.action==inputs.start_from || contains(env.ran,inputs.start_from)
      name: k8s
      shell: bash
      run: |
        echo "ran=${{github.action}} ${{env.ran}}" >> $GITHUB_ENV
        echo "k8s"
  
    - id: tools
      if: github.action==inputs.start_from || contains(env.ran,inputs.start_from)
      name: tools
      shell: bash
      run: |
        echo "ran=${{github.action}} ${{env.ran}}" >> $GITHUB_ENV
        echo "tools"
  
    - id: iso
      if: github.action==inputs.start_from || contains(env.ran,inputs.start_from)
      name: iso
      shell: bash
      run: |
        echo "ran=${{github.action}} ${{env.ran}}" >> $GITHUB_ENV
        echo "iso"
  
    - id: upload
      if: github.action==inputs.start_from || contains(env.ran,inputs.start_from)
      name: upload
      shell: bash
      run: |
        echo "ran=${{github.action}} ${{env.ran}}" >> $GITHUB_ENV
        echo "upload"
  
    - id: install
      if: github.action==inputs.start_from || contains(env.ran,inputs.start_from)
      name: install
      shell: bash
      run: |
        echo "ran=${{github.action}} ${{env.ran}}" >> $GITHUB_ENV
        echo "install"
  
    - id: export
      if: github.action==inputs.start_from || contains(env.ran,inputs.start_from)
      name: export
      shell: bash
      run: |
        echo "ran=${{github.action}} ${{env.ran}}" >> $GITHUB_ENV
        echo "export"
  
